/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FairDropRegistration,
  FairDropRegistrationInterface,
} from "../FairDropRegistration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyhash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "adminBulkRegisterForDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentlyEligible",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycRegisterForDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerForDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrationStatus",
    outputs: [
      {
        internalType: "enum FairDropRegistration.RegistrationStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectEligibleBuyers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526005600f553480156200001657600080fd5b5060405162001581380380620015818339810160408190526200003991620001c1565b80858584620000516200004b620000c8565b62000106565b600180546001600160a01b03199081166001600160a01b0393841617909155606093841b6001600160601b031990811660a0529290931b9091166080526004805490921692169190911790556005839055655af3107a4000600655620000b942607862000227565b601055506200024c9350505050565b6000620000d53362000156565b15620000eb575060131936013560601c62000103565b620001006200016d60201b620008451760201c565b90505b90565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6004546001600160a01b038281169116145b919050565b60006200017a3362000156565b1562000190575060131936013560601c62000103565b62000100620001a560201b620008731760201c565b3390565b80516001600160a01b03811681146200016857600080fd5b600080600080600060a08688031215620001d9578081fd5b620001e486620001a9565b9450620001f460208701620001a9565b9350604086015192506200020b60608701620001a9565b91506200021b60808701620001a9565b90509295509295909350565b600082198211156200024757634e487b7160e01b81526011600452602481fd5b500190565b60805160601c60a05160601c6113026200027f6000396000818161056901526108d1015260006108a201526113026000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637f1e9cb0116100a25780639a7c4b71116100715780639a7c4b71146101ec578063d87854cb146101ff578063f2fde38b14610214578063fbc0f28c14610227578063fffd5ec41461023a57610116565b80637f1e9cb0146101b657806388837094146101be5780638da5cb5b146101d157806394985ddd146101d957610116565b8063450d11f0116100e9578063450d11f01461015e5780634e71d92d14610166578063572b6c051461016e578063602e03b41461018e578063715018a6146101ae57610116565b8063204b262b1461011b57806333816e0e1461012557806336585fc11461012d578063378c387414610156575b600080fd5b610123610242565b005b610123610344565b61014061013b366004610de7565b610393565b60405161014d9190610f0b565b60405180910390f35b6101236103b3565b6101406103d8565b6101236103e7565b61018161017c366004610cc2565b61047f565b60405161014d9190610f4f565b6101a161019c366004610cc2565b610496565b60405161014d9190610f91565b6101236104ab565b6101406104f4565b6101236101cc366004610cc2565b610503565b61014061054e565b6101236101e7366004610dc6565b61055e565b6101236101fa366004610e2e565b6105b4565b610207610625565b60405161014d9190611219565b610123610222366004610cc2565b61062b565b610123610235366004610ce5565b61069c565b61020761083f565b600060086000610250610877565b6001600160a01b0316815260208101919091526040016000205460ff16600381111561028c57634e487b7160e01b600052602160045260246000fd5b146102b25760405162461bcd60e51b81526004016102a990611116565b60405180910390fd5b6001600860006102c0610877565b6001600160a01b031681526020810191909152604001600020805460ff1916600183600381111561030157634e487b7160e01b600052602160045260246000fd5b02179055506009610310610877565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b03909216919091179055565b60105442116103655760405162461bcd60e51b81526004016102a990611045565b610258601060008282546103799190611238565b9250508190555061038e60055460065461089e565b600755565b600a81600581106103a357600080fd5b01546001600160a01b0316905081565b6103bc3361047f565b6102425760405162461bcd60e51b81526004016102a990611142565b6001546001600160a01b031681565b6002600860006103f5610877565b6001600160a01b0316815260208101919091526040016000205460ff16600381111561043157634e487b7160e01b600052602160045260246000fd5b1461044e5760405162461bcd60e51b81526004016102a9906110f9565b61047d610459610877565b6040516020016104699190610f0b565b6040516020818303038152906040526109e1565b565b6004546001600160a01b038281169116145b919050565b60086020526000908152604090205460ff1681565b6104b3610877565b6001600160a01b03166104c461054e565b6001600160a01b0316146104ea5760405162461bcd60e51b81526004016102a990611163565b61047d6000610a1b565b6002546001600160a01b031681565b6002546001600160a01b03161561052c5760405162461bcd60e51b81526004016102a9906111cf565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03165b90565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a65760405162461bcd60e51b81526004016102a990611198565b6105b08282610a6b565b5050565b6001546001600160a01b031633146105de5760405162461bcd60e51b81526004016102a990610fb9565b61061f848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bd492505050565b50505050565b600f5481565b610633610877565b6001600160a01b031661064461054e565b6001600160a01b03161461066a5760405162461bcd60e51b81526004016102a990611163565b6001600160a01b0381166106905760405162461bcd60e51b81526004016102a99061107c565b61069981610a1b565b50565b6106a4610877565b6001600160a01b03166106b561054e565b6001600160a01b0316146106db5760405162461bcd60e51b81526004016102a990611163565b60005b81518110156105b05760006008600084848151811061070d57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16600381111561075357634e487b7160e01b600052602160045260246000fd5b141561082d5760016008600084848151811061077f57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660018360038111156107ca57634e487b7160e01b600052602160045260246000fd5b021790555060098282815181106107f157634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b8061083781611250565b9150506106de565b60105481565b60006108503361047f565b15610864575060131936013560601c61055b565b61086c610873565b905061055b565b3390565b60006108823361047f565b15610896575060131936013560601c61055b565b61086c610845565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610905929190610efd565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161093293929190610f1f565b602060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610da6565b506000838152600360205260408120546109a390859083903090610c4a565b6000858152600360205260409020549091506109c0906001611238565b6000858152600360205260409020556109d98482610c84565b949350505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681604051610a109190610f7e565b60405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6007548214610a8c5760405162461bcd60e51b81526004016102a9906110c2565b60005b600581108015610aa0575060095481105b15610bcf576000824283604051602001610abc93929190611222565b60408051601f19818403018152919052805160209091012060098054919250600091610ae8908461126b565b81548110610b0657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526008602052604090205460ff166003811115610b5a57634e487b7160e01b600052602160045260246000fd5b1415610bbb5780600a8460058110610b8257634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b039283166001600160a01b031990911617905581166000908152600860205260409020805460ff191660021790555b610bc6600184611238565b92505050610a8f565b505050565b60025482906001600160a01b03808316911614610c035760405162461bcd60e51b81526004016102a990610ffa565b60008083806020019051810190610c1a9190610dff565b600f919091556001600160a01b03166000908152600860205260409020805460ff19166003179055505050505050565b600084848484604051602001610c639493929190610f5a565b60408051601f19818403018152919052805160209091012095945050505050565b60008282604051602001610c99929190610efd565b60405160208183030381529060405280519060200120905092915050565b8035610491816112b7565b600060208284031215610cd3578081fd5b8135610cde816112b7565b9392505050565b60006020808385031215610cf7578182fd5b823567ffffffffffffffff80821115610d0e578384fd5b818501915085601f830112610d21578384fd5b813581811115610d3357610d336112a1565b83810260405185828201018181108582111715610d5257610d526112a1565b604052828152858101935084860182860187018a1015610d70578788fd5b8795505b83861015610d9957610d8581610cb7565b855260019590950194938601938601610d74565b5098975050505050505050565b600060208284031215610db7578081fd5b81518015158114610cde578182fd5b60008060408385031215610dd8578081fd5b50508035926020909101359150565b600060208284031215610df8578081fd5b5035919050565b60008060408385031215610e11578182fd5b825191506020830151610e23816112b7565b809150509250929050565b60008060008060608587031215610e43578182fd5b843593506020850135610e55816112b7565b9250604085013567ffffffffffffffff80821115610e71578384fd5b818701915087601f830112610e84578384fd5b813581811115610e92578485fd5b886020828501011115610ea3578485fd5b95989497505060200194505050565b60008151808452815b81811015610ed757602081850181015186830182015201610ebb565b81811115610ee85782602083870101525b50601f01601f19169290920160200192915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b600060018060a01b038516825283602083015260606040830152610f466060830184610eb2565b95945050505050565b901515815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b600060208252610cde6020830184610eb2565b6020810160048310610fb357634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526021908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456040820152602960f91b606082015260800190565b6020808252602b908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201526a1497d19493d357d493d3d560aa1b606082015260800190565b60208082526018908201527f427579696e672077696e646f77207374696c6c206f70656e0000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601a908201527f4261642072616e646f6d6e6573732066756c66696c6c6d656e74000000000000604082015260600190565b60208082526003908201526234303160e81b604082015260600190565b602080825260129082015271105b1c9958591e481c9959da5cdd195c995960721b604082015260600190565b6020808252600790820152664644523a34323960c81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b6020808252602a908201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160408201526913149150511657d4d15560b21b606082015260800190565b90815260200190565b9283526020830191909152604082015260600190565b6000821982111561124b5761124b61128b565b500190565b60006000198214156112645761126461128b565b5060010190565b60008261128657634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461069957600080fdfea264697066735822122006917b4d1001880c7907d5cadd3f11df327509653b5c2d660e291124fc077c8d64736f6c63430008000033";

type FairDropRegistrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairDropRegistrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FairDropRegistration__factory extends ContractFactory {
  constructor(...args: FairDropRegistrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyhash: BytesLike,
    _fxChild: string,
    forwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FairDropRegistration> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyhash,
      _fxChild,
      forwarder,
      overrides || {}
    ) as Promise<FairDropRegistration>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyhash: BytesLike,
    _fxChild: string,
    forwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyhash,
      _fxChild,
      forwarder,
      overrides || {}
    );
  }
  attach(address: string): FairDropRegistration {
    return super.attach(address) as FairDropRegistration;
  }
  connect(signer: Signer): FairDropRegistration__factory {
    return super.connect(signer) as FairDropRegistration__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairDropRegistrationInterface {
    return new utils.Interface(_abi) as FairDropRegistrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FairDropRegistration {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FairDropRegistration;
  }
}
