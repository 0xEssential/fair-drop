/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockLink, MockLinkInterface } from "../MockLink";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260088152674d6f636b4c696e6b60c01b6020808301918252835180850190945260048452634c494e4b60e01b9084015281519192916200005e916003916200017f565b508051620000749060049060208401906200017f565b505050620000923368056bc75e2d631000006200009860201b60201c565b620002c7565b6001600160a01b038216620000ca5760405162461bcd60e51b8152600401620000c19062000225565b60405180910390fd5b620000d8600083836200017a565b8060026000828254620000ec919062000265565b90915550506001600160a01b038216600090815260208190526040812080548392906200011b90849062000265565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001609085906200025c565b60405180910390a362000176600083836200017a565b5050565b505050565b8280546200018d906200028a565b90600052602060002090601f016020900481019282620001b15760008555620001fc565b82601f10620001cc57805160ff1916838001178555620001fc565b82800160010185558215620001fc579182015b82811115620001fc578251825591602001919060010190620001df565b506200020a9291506200020e565b5090565b5b808211156200020a57600081556001016200020f565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200028557634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200029f57607f821691505b60208210811415620002c157634e487b7160e01b600052602260045260246000fd5b50919050565b610bed80620002d76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634000aea0116100715780634000aea01461014757806370a082311461015a57806395d89b411461016d578063a457c2d714610175578063a9059cbb14610188578063dd62ed3e1461019b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101ae565b6040516100ce9190610916565b60405180910390f35b6100ea6100e53660046107aa565b610240565b6040516100ce919061090b565b6100ff61025d565b6040516100ce9190610b0a565b6100ea61011a36600461076f565b610263565b6101276102fc565b6040516100ce9190610b34565b6100ea6101423660046107aa565b610301565b6100ea6101553660046107d3565b610355565b6100ff61016836600461071c565b6103d2565b6100c16103f1565b6100ea6101833660046107aa565b610400565b6100ea6101963660046107aa565b61046f565b6100ff6101a936600461073d565b610483565b6060600380546101bd90610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546101e990610b66565b80156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b5050505050905090565b600061025461024d6104ae565b84846104b2565b50600192915050565b60025490565b6000610270848484610566565b6001600160a01b0384166000908152600160205260408120816102916104ae565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102dd5760405162461bcd60e51b81526004016102d4906109f4565b60405180910390fd5b6102f1856102e96104ae565b8584036104b2565b506001949350505050565b601290565b600061025461030e6104ae565b84846001600061031c6104ae565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103509190610b42565b6104b2565b6000610361848461046f565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040516103a7929190610b13565b60405180910390a36103b884610690565b156103c8576103c8848484610696565b5060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bd90610b66565b6000806001600061040f6104ae565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561045b5760405162461bcd60e51b81526004016102d490610ac5565b6103c86104666104ae565b858584036104b2565b600061025461047c6104ae565b8484610566565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104d85760405162461bcd60e51b81526004016102d490610a81565b6001600160a01b0382166104fe5760405162461bcd60e51b81526004016102d49061096c565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610559908590610b0a565b60405180910390a3505050565b6001600160a01b03831661058c5760405162461bcd60e51b81526004016102d490610a3c565b6001600160a01b0382166105b25760405162461bcd60e51b81526004016102d490610929565b6105bd838383610700565b6001600160a01b038316600090815260208190526040902054818110156105f65760405162461bcd60e51b81526004016102d4906109ae565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061062d908490610b42565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106779190610b0a565b60405180910390a361068a848484610700565b50505050565b3b151590565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed36906106c8903390879087906004016108db565b600060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b5050505050505050565b505050565b80356001600160a01b03811681146103ec57600080fd5b60006020828403121561072d578081fd5b61073682610705565b9392505050565b6000806040838503121561074f578081fd5b61075883610705565b915061076660208401610705565b90509250929050565b600080600060608486031215610783578081fd5b61078c84610705565b925061079a60208501610705565b9150604084013590509250925092565b600080604083850312156107bc578182fd5b6107c583610705565b946020939093013593505050565b6000806000606084860312156107e7578283fd5b6107f084610705565b92506020808501359250604085013567ffffffffffffffff80821115610814578384fd5b818701915087601f830112610827578384fd5b81358181111561083957610839610ba1565b604051601f8201601f191681018501838111828210171561085c5761085c610ba1565b60405281815283820185018a1015610872578586fd5b81858501868301378585838301015280955050505050509250925092565b60008151808452815b818110156108b557602081850181015186830182015201610899565b818111156108c65782602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b0385168252836020830152606060408301526109026060830184610890565b95945050505050565b901515815260200190565b6000602082526107366020830184610890565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b600083825260406020830152610b2c6040830184610890565b949350505050565b60ff91909116815260200190565b60008219821115610b6157634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610b7a57607f821691505b60208210811415610b9b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b663172ca61bec1d274925c08b5dbd6b140cf8e953dafe451770be334fc1744864736f6c63430008000033";

type MockLinkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLinkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLink__factory extends ContractFactory {
  constructor(...args: MockLinkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLink> {
    return super.deploy(overrides || {}) as Promise<MockLink>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockLink {
    return super.attach(address) as MockLink;
  }
  connect(signer: Signer): MockLink__factory {
    return super.connect(signer) as MockLink__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLinkInterface {
    return new utils.Interface(_abi) as MockLinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLink {
    return new Contract(address, _abi, signerOrProvider) as MockLink;
  }
}
