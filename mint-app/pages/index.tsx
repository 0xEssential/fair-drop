import Head from 'next/head';
import React from 'react';

import Button from '../components/Button';
import styles from '../styles/Home.module.css';

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>FairDrop by 0xEssential</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,400;0,800;1,500;1,700&display=swap"
          rel="stylesheet"
        />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <div className={styles.titleContainer}>
            <h1 className={styles.title}>
              <em>FairDrop</em> üé°
            </h1>

            <p className={styles.description}>
              A proof-of-concept for fair NFT drops
            </p>

            <p>
              <a
                href="https://github.com/0xessential/fair-drop"
                target="_blank"
                rel="noreferrer"
              >
                Github
              </a>{' '}
              ‚Ä¢ Etherscan ‚Ä¢ Polygonscan
            </p>
          </div>
          <div className={styles.buttonContainer}>
            <Button onClick={() => console.log('modal?')}>Try it</Button>
          </div>
        </div>
        <div className={styles.article}>
          {/* <Drop /> */}
          <p>
            At{' '}
            <a
              href="https://twitter.com/0xessential"
              target="_blank"
              rel="noreferrer"
            >
              0xEssential
            </a>{' '}
            we&apos;ve been learning from other NFT collectible drops to
            determine the best way to release our collection{' '}
            <a href="https://wrasslers.com" target="_blank" rel="noreferrer">
              Wrasslers
            </a>
            . We appreciate that projects like{' '}
            <a href="https://artblocks.io/" target="_blank" rel="noreferrer">
              ArtBlocks
            </a>{' '}
            and{' '}
            <a
              href="https://www.parallel.life/"
              target="_blank"
              rel="noreferrer"
            >
              Parallel
            </a>{' '}
            are exploring different models to reduce the gas wars that happen on
            popular drops, and have been impressed by projects like{' '}
            <a
              href="https://forgettenrunes.com/"
              target="_blank"
              rel="noreferrer"
            >
              Forgotten Runes Wizard&apos;s Cult
            </a>{' '}
            who used and{' '}
            <a
              href="https://twitter.com/cryppadotta/status/1420372022790483979"
              target="_blank"
              rel="noreferrer"
            >
              shared some best practices
            </a>
            . We&apos;re also excited about some platforms our friends are
            working on to help solve similar issues, like{' '}
            <a href="https://niftyroyale.com/" target="_blank" rel="noreferrer">
              Nifty Royale
            </a>{' '}
            and{' '}
            <a href="https://chestr.io/" target="_blank" rel="noreferrer">
              Chestr
            </a>
            . We think we can add something to the conversation by offering this
            idea and reference implementation to the community.
          </p>
          <p>
            0xEssential is committed to building open source developer tools for
            NFT projects. We are primarily focused on inheritable contracts that
            provide metaverse portability and utility, but any time we build
            tools for ourselves, we like to share them back to the community - a
            rising tide lifts all boats‚õµÔ∏è
          </p>
          <p>
            Our ideal NFT drop is average user first - no FOMO or failed
            transactions, fewer bots. No drama, no whales minting 30% of supply,
            for better or worse. These are the key aspects of a{' '}
            <em>FairDrop</em>:
          </p>
          <ul>
            <li>
              <strong>Efficient</strong> - no more gas wars, and no performance
              issues related to pageloads.
            </li>
            <li>
              <strong>Timezone agnostic</strong> - crypto is global, and timed
              drops inevitably put someone at a disadvantage, while launch dates
              are too frequently missed.
            </li>
            <li>
              <strong>Distributed randomly</strong> - being the quickest to
              click and pumping gas is not the best way to decide who gets an
              NFT.
            </li>
            <li>
              <strong>Decentralized and Trustless</strong> - we should not be
              asking users to register with email, or using a centralized
              database and webserver to manage who can buy what.
            </li>
          </ul>

          <p>
            We took all of those requirements and built a system that uses
            raffles with a <em>right to buy</em> reward. Random winners get to
            mint NFTs at a fair floor price, wherever they are in the world,
            whether they&apos;re influencers, etherscan minters, bot makers, or
            MEV manipulators.
            <br />
          </p>
          <hr />
          <h2> 1. Register</h2>
          <h3>Address registers for drop on-chain</h3>
          <p>
            A user can register their interest in an NFT drop in a decentralized
            way. We use Polygon for registration to keep things cheap. A project
            can launch their list before release to build and gauge interest,
            while users know they have a fair chance to mint.
          </p>

          <h2>2. Raffle</h2>
          <h3>Totally fair random selection</h3>
          <p>
            Once a project is ready for launch we use Chainlink VRF to select a
            random list of eligible minters. These addresses can each mint{' '}
            <em>n</em> tokens, where <em>n x minters</em> is equal to available
            tokens. Addresses are passed to Ethereum mainnet for minting.
          </p>

          <h2>3. Redeem</h2>
          <h3>Chilled out and cheap mints</h3>
          <p>
            Eligible minting addresses have 24 hours to mint their tokens. They
            mint on Ethereum mainnet without the need for gas wars or staying up
            all night to catch a drop.
          </p>

          <h2>4. Repeat</h2>
          <h3></h3>
          <p>
            After 24 hours a new batch of eligible minters is selected for
            minting. Previous minters become ineligible and we select a new set
            of minters relative to remaining tokens.
          </p>
          <hr />
          <iframe
            src="https://theconvo.space/embed/dt?url=https%3A%2F%2Ffairdrop.0xessential.com%2F&threadId=fairdrop-discussion"
            allowtransparency="true"
            width="100%"
            style={{ border: 'none' }}
          >
            Comments
          </iframe>
        </div>
      </main>
    </div>
  );
}
