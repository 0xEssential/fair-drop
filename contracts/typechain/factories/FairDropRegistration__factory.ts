/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FairDropRegistration,
  FairDropRegistrationInterface,
} from "../FairDropRegistration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyhash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentlyEligible",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerForDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrationStatus",
    outputs: [
      {
        internalType: "enum FairDropRegistration.RegistrationStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selectEligibleBuyers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000805460ff1916905560056010553480156200002057600080fd5b506040516200181e3803806200181e8339810160408190526200004391620001f0565b600380546001600160a01b0383166001600160a01b03199091161790556001600160601b0319606085811b821660a05284901b1660805260408051808201909152601481527f4661697244726f70526567697374726174696f6e0000000000000000000000006020820152620000b990620000e3565b6006829055655af3107a4000600755620000d542607862000297565b60115550620002bc92505050565b60005460ff1615620001125760405162461bcd60e51b815260040162000109906200026f565b60405180910390fd5b6200011d816200012d565b506000805460ff19166001179055565b6040518060800160405280604f8152602001620017cf604f913980516020918201208251838301206040805180820190915260018152603160f81b930192909252907fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6306200019b620001cf565b604051620001b195949392919060200162000243565b60408051601f19818403018152919052805160209091012060015550565b4690565b80516001600160a01b0381168114620001eb57600080fd5b919050565b6000806000806080858703121562000206578384fd5b6200021185620001d3565b93506200022160208601620001d3565b9250604085015191506200023860608601620001d3565b905092959194509250565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b6020808252600e908201526d185b1c9958591e481a5b9a5d195960921b604082015260600190565b60008219821115620002b757634e487b7160e01b81526011600452602481fd5b500190565b60805160601c60a05160601c6114e0620002ef600039600081816106d201526108860152600061085701526114e06000f3fe6080604052600436106100fe5760003560e01c8063450d11f0116100955780638883709411610064578063888370941461025d57806394985ddd1461027d5780639a7c4b711461029d578063d87854cb146102bd578063fffd5ec4146102d2576100fe565b8063450d11f0146101f15780634e71d92d14610206578063602e03b41461021b5780637f1e9cb014610248576100fe565b80632d0335ab116100d15780632d0335ab1461017a57806333816e0e1461019a5780633408e470146101af57806336585fc1146101c4576100fe565b80630c53c51c146101035780630f7e59701461012c57806320379ee514610141578063204b262b14610163575b600080fd5b610116610111366004610d99565b6102e7565b6040516101239190611100565b60405180910390f35b34801561013857600080fd5b50610116610470565b34801561014d57600080fd5b5061015661048d565b60405161012391906110b5565b34801561016f57600080fd5b50610178610493565b005b34801561018657600080fd5b50610156610195366004610d7f565b610540565b3480156101a657600080fd5b5061017861055b565b3480156101bb57600080fd5b506101566105aa565b3480156101d057600080fd5b506101e46101df366004610eb1565b6105ae565b604051610123919061100b565b3480156101fd57600080fd5b506101e46105ce565b34801561021257600080fd5b506101786105dd565b34801561022757600080fd5b5061023b610236366004610d7f565b610658565b6040516101239190611113565b34801561025457600080fd5b506101e461066d565b34801561026957600080fd5b50610178610278366004610d7f565b61067c565b34801561028957600080fd5b50610178610298366004610e90565b6106c7565b3480156102a957600080fd5b506101786102b8366004610ee1565b61071d565b3480156102c957600080fd5b5061015661078e565b3480156102de57600080fd5b50610156610794565b60408051606081810183526001600160a01b03881660008181526002602090815290859020548452830152918101869052610325878287878761079a565b61034a5760405162461bcd60e51b8152600401610341906112fa565b60405180910390fd5b6001600160a01b03871660009081526002602052604090205461036e906001610840565b6001600160a01b0388166000908152600260205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b906103be90899033908a9061101f565b60405180910390a1600080306001600160a01b0316888a6040516020016103e6929190610fb9565b60408051601f198184030181529082905261040091610f9d565b6000604051808303816000865af19150503d806000811461043d576040519150601f19603f3d011682016040523d82523d6000602084013e610442565b606091505b5091509150816104645760405162461bcd60e51b8152600401610341906111fe565b98975050505050505050565b604051806040016040528060018152602001603160f81b81525081565b60015490565b3360009081526009602052604081205460ff1660038111156104c557634e487b7160e01b600052602160045260246000fd5b146104e25760405162461bcd60e51b815260040161034190611289565b336000818152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319169091179055565b6001600160a01b031660009081526002602052604090205490565b601154421161057c5760405162461bcd60e51b8152600401610341906111c7565b6102586011600082825461059091906113bc565b925050819055506105a5600654600754610853565b600855565b4690565b600b81600581106105be57600080fd5b01546001600160a01b0316905081565b6003546001600160a01b031681565b60023360009081526009602052604090205460ff16600381111561061157634e487b7160e01b600052602160045260246000fd5b1461062e5760405162461bcd60e51b81526004016103419061126c565b61065633604051602001610642919061100b565b604051602081830303815290604052610996565b565b60096020526000908152604090205460ff1681565b6004546001600160a01b031681565b6004546001600160a01b0316156106a55760405162461bcd60e51b815260040161034190611372565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461070f5760405162461bcd60e51b81526004016103419061133b565b61071982826109d0565b5050565b6003546001600160a01b031633146107475760405162461bcd60e51b81526004016103419061113b565b610788848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0f92505050565b50505050565b60105481565b60115481565b60006001600160a01b0386166107c25760405162461bcd60e51b8152600401610341906112b5565b60016107d56107d087610a5e565b610abd565b838686604051600081526020016040526040516107f594939291906110e2565b6020604051602081039080840390855afa158015610817573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600061084c82846113bc565b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016108ba929190610f8f565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016108e793929190611054565b602060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190610e70565b5060008381526005602052604081205461095890859083903090610ad9565b6000858152600560205260409020549091506109759060016113bc565b60008581526005602052604090205561098e8482610b13565b949350505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516109c59190611100565b60405180910390a150565b60085482146109f15760405162461bcd60e51b815260040161034190611235565b6109fa81610b46565b610719600b604051602001610642919061107b565b60045482906001600160a01b03808316911614610a3e5760405162461bcd60e51b81526004016103419061117c565b600082806020019051810190610a549190610ec9565b6010555050505050565b60006040518060800160405280604381526020016114686043913980516020918201208351848301516040808701518051908601209051610a9f95016110be565b6040516020818303038152906040528051906020012090505b919050565b6000610ac761048d565b82604051602001610a9f929190610ff0565b600084848484604051602001610af294939291906110be565b60408051601f19818403018152919052805160209091012095945050505050565b60008282604051602001610b28929190610f8f565b60405160208183030381529060405280519060200120905092915050565b60005b6005811015610c1557600360096000600b8460058110610b7957634e487b7160e01b600052603260045260246000fd5b01546001600160a01b031681526020810191909152604001600020805460ff19166001836003811115610bbc57634e487b7160e01b600052602160045260246000fd5b02179055506000600b8260058110610be457634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b0319166001600160a01b039290921691909117905580610c0d81611400565b915050610b49565b5060005b600581108015610c2a5750600a5481105b156107195760008242604051602001610c44929190610f8f565b60408051601f198184030181529190528051602090910120600a8054919250600091610c70908461141b565b81548110610c8e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316905060016001600160a01b03821660009081526009602052604090205460ff166003811115610ce257634e487b7160e01b600052602160045260246000fd5b1415610d435780600b8460058110610d0a57634e487b7160e01b600052603260045260246000fd5b0180546001600160a01b039283166001600160a01b031990911617905581166000908152600960205260409020805460ff191660021790555b610d4e6001846113bc565b92505050610c19565b80356001600160a01b0381168114610ab857600080fd5b803560ff81168114610ab857600080fd5b600060208284031215610d90578081fd5b61084c82610d57565b600080600080600060a08688031215610db0578081fd5b610db986610d57565b945060208087013567ffffffffffffffff80821115610dd6578384fd5b818901915089601f830112610de9578384fd5b813581811115610dfb57610dfb611451565b604051601f8201601f1916810185018381118282101715610e1e57610e1e611451565b60405281815283820185018c1015610e34578586fd5b818585018683013790810190930184905250909450506040860135925060608601359150610e6460808701610d6e565b90509295509295909350565b600060208284031215610e81578081fd5b8151801515811461084c578182fd5b60008060408385031215610ea2578182fd5b50508035926020909101359150565b600060208284031215610ec2578081fd5b5035919050565b600060208284031215610eda578081fd5b5051919050565b60008060008060608587031215610ef6578384fd5b84359350610f0660208601610d57565b9250604085013567ffffffffffffffff80821115610f22578384fd5b818701915087601f830112610f35578384fd5b813581811115610f43578485fd5b886020828501011115610f54578485fd5b95989497505060200194505050565b60008151808452610f7b8160208601602086016113d4565b601f01601f19169290920160200192915050565b918252602082015260400190565b60008251610faf8184602087016113d4565b9190910192915050565b60008351610fcb8184602088016113d4565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0384811682528316602082015260606040820181905260009061104b90830184610f63565b95945050505050565b600060018060a01b03851682528360208301526060604083015261104b6060830184610f63565b60a08101818360005b60058110156110ac5781546001600160a01b0316835260209092019160019182019101611084565b50505092915050565b90815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b60006020825261084c6020830184610f63565b602081016004831061113557634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526021908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456040820152602960f91b606082015260800190565b6020808252602b908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201526a1497d19493d357d493d3d560aa1b606082015260800190565b60208082526018908201527f427579696e672077696e646f77207374696c6c206f70656e0000000000000000604082015260600190565b6020808252601c908201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000604082015260600190565b6020808252601a908201527f4261642072616e646f6d6e6573732066756c66696c6c6d656e74000000000000604082015260600190565b60208082526003908201526234303160e81b604082015260600190565b602080825260129082015271105b1c9958591e481c9959da5cdd195c995960721b604082015260600190565b60208082526025908201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360408201526424a3a722a960d91b606082015260800190565b60208082526021908201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636040820152600d60fb1b606082015260800190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b6020808252602a908201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160408201526913149150511657d4d15560b21b606082015260800190565b600082198211156113cf576113cf61143b565b500190565b60005b838110156113ef5781810151838201526020016113d7565b838111156107885750506000910152565b60006000198214156114145761141461143b565b5060010190565b60008261143657634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220a27256b497fbcd0baa634b56215fe683c09aab96fe466d717602b8071162fcd964736f6c63430008000033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type FairDropRegistrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairDropRegistrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FairDropRegistration__factory extends ContractFactory {
  constructor(...args: FairDropRegistrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyhash: BytesLike,
    _fxChild: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FairDropRegistration> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyhash,
      _fxChild,
      overrides || {}
    ) as Promise<FairDropRegistration>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyhash: BytesLike,
    _fxChild: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyhash,
      _fxChild,
      overrides || {}
    );
  }
  attach(address: string): FairDropRegistration {
    return super.attach(address) as FairDropRegistration;
  }
  connect(signer: Signer): FairDropRegistration__factory {
    return super.connect(signer) as FairDropRegistration__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairDropRegistrationInterface {
    return new utils.Interface(_abi) as FairDropRegistrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FairDropRegistration {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FairDropRegistration;
  }
}
